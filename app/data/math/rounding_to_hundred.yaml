description: The student sees a number between 100 and 9999 and have to round it to
  the nearest hundred
example: 'Number: 6537 Correct Answer: 6500'
pyscript:
  checker: "def check_answer(event):\n  user_answer = document.getElementById('answerField').value\n\
    \  if user_answer.isnumeric():\n      user_answer = int(user_answer)\n      is_correct\
    \ = True if user_answer == answer else False\n  else:\n      is_correct = False\n\
    \n  return [is_correct, answer, user_answer]\n"
  generator: "def generate_number():\n  number = 0\n  while number % 100 == 0:\n \
    \   number = random.randint(100, 9999)\n  return number\n  \ndef generate(parent):\n\
    \  global answer\n\n  number = generate_number()\n  rounded_number = round(number,\
    \ -2)\n  answer = rounded_number\n\n  print(number)\n\n  question_element, answer_element\
    \ = generate_template(parent)\n  question_span = document.createElement(\"span\"\
    )\n  mf = document.createElement(\"math-field\")\n  mf.readonly = True\n  mf.innerHTML\
    \ = f\"{number}\"\n  question_label = document.createElement(\"p\")\n  question_label.innerHTML\
    \ = \"{{ text.text_question }}\"\n  question_span.append(question_label)\n  question_span.append(mf)\n\
    \  question_element.append(question_span)\n\n  answer_field = document.createElement(\"\
    input\")\n  answer_field.className = 'input input-bordered w-full max-w-xs'\n\
    \  answer_field.id = 'answerField'\n  answer_element.append(answer_field)\n"
  globals: 'answer = 0

    '
  imports: 'import random

    from pyscript import document

    from pyweb import pydom

    '
template: 01_simple_question_answer
text:
  text_question:
    english: Round to the nearest hundred.
    german: Runde auf Hunderter.
title:
  english: Rounding natural numbers
  german: Nat√ºrliche Zahlen runden
topic_id: 18
